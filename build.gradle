plugins {
    id("io.micronaut.application") version "3.1.0-M1"
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.aot") version "3.1.0-M1"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
    aot {
        version = "1.0.0-M3"
        //optimizeServiceLoading = true
        //convertYamlToJava = true
        //optimizeClassLoading = true
        //precomputeOperations = true
        deduceEnvironment = true
        //sealEnvironment = true
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    compileOnly("org.graalvm.nativeimage:svm")

    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("example.micronaut.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}


graalvmNative {
    binaries {
        optimized {
            // Workaround for https://github.com/graalvm/native-build-tools/pull/182
            configurationFileDirectories.from(
                    tasks.named("generateResourcesConfigFile")
                            .map(t -> t.outputFile.map(f -> f.asFile.parentFile))
            )
        }
    }
}